// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MarkdownEditor renders correctly, handles text change, and reset 1`] = `
<RCTScrollView
  contentContainerStyle={
    {
      "backgroundColor": "#fff",
      "flexGrow": 1,
      "padding": 20,
    }
  }
>
  <View>
    <View
      style={
        {
          "flex": 1,
          "flexDirection": "column",
        }
      }
    >
      <TextInput
        multiline={true}
        onChangeText={[Function]}
        placeholder="Enter your markdown here..."
        style={
          {
            "borderColor": "#ccc",
            "borderRadius": 5,
            "borderWidth": 1,
            "fontSize": 16,
            "height": 200,
            "margin": 10,
            "padding": 10,
          }
        }
        value=""
      />
      <RCTScrollView
        style={
          {
            "backgroundColor": "#f0f0f0",
            "borderRadius": 5,
            "flex": 1,
            "margin": 10,
            "padding": 10,
          }
        }
      >
        <View>
          <View
            style={{}}
          />
        </View>
      </RCTScrollView>
    </View>
    <View
      style={
        {
          "marginBottom": 20,
          "marginTop": 10,
        }
      }
    >
      <View
        accessibilityRole="button"
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            [
              {},
            ]
          }
        >
          <Text
            style={
              [
                {
                  "color": "#007AFF",
                  "fontSize": 18,
                  "margin": 8,
                  "textAlign": "center",
                },
              ]
            }
          >
            Reset
          </Text>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;

exports[`MarkdownEditor shows loading indicator when loading is true 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <ActivityIndicator
    size="large"
    testID="loading-indicator"
  />
</View>
`;
